{"version":3,"file":"static/js/927.ab90c7fa.chunk.js","mappings":"mPAEaA,EAAYC,EAAAA,GAAAA,IAAH,sCAGTC,EAAQD,EAAAA,GAAAA,GAAH,+CACD,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGLC,EAAOL,EAAAA,GAAAA,EAAH,+CACA,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,SCiClB,EArCgB,WAEZ,IAAOE,GAAWC,EAAAA,EAAAA,MAAXD,QAGP,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAUjB,OAPAC,EAAAA,EAAAA,YAAU,YAENC,EAAAA,EAAAA,IAAkBR,GAASS,MAAK,SAAAC,GAAc,OAAOA,CAAU,IAAED,MAAK,SAACE,GACnEP,EAAWO,EACd,IAAEC,OAAM,SAAAC,GAAK,OAAIA,CAAJ,GACb,GAAE,CAACb,IAEe,IAAnBG,EAAQW,QACG,uEAGX,8BACMX,IAAW,+BACT,SAACV,EAAD,WACA,wBACSU,EAAQY,KAAI,SAACC,EAAQC,GAAT,eACT,gBAAgBC,GAAE,oBAAEb,EAASc,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,UAA5C,WACA,UAACzB,EAAD,uBAAiBqB,EAAOK,OAAxB,QACA,UAACtB,EAAD,eAAQiB,EAAOM,QAAf,OAFA,MAASL,EADA,WAWpC,C,uMCtCcM,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBC,EAAAA,GAAAA,IAAA,0FADzB,cACQd,EADR,yBAKSA,EAASC,MALlB,kE,SAUec,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,uFACyBF,EAAAA,GAAAA,IAAA,6IACiHE,IAF1I,cACQhB,EADR,yBAKSA,EAASC,MALlB,kE,SAUegB,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiC3B,GAAjC,uFACyBwB,EAAAA,GAAAA,IAAA,6CACiBxB,EADjB,6DADzB,cACQU,EADR,yBAKSA,EAASC,MALlB,kE,SAUeiB,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8B5B,GAA9B,uFACyBwB,EAAAA,GAAAA,IAAA,6CACiBxB,EADjB,qEADzB,cACQU,EADR,yBAKSA,EAASC,MALlB,kE,SAUeH,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCR,GAAjC,uFACyBwB,EAAAA,GAAAA,IAAA,6CACiBxB,EADjB,4EADzB,cACQU,EADR,yBAKSA,EAASC,KAAKkB,SALvB,kE","sources":["components/components/Reviews/Reviews.styled.jsx","components/components/Reviews/Reviews.jsx","utils/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\ndisplay: flex;`\n\nexport const Title = styled.h4`\nmargin-bottom: ${p => p.theme.space[4]}px;\n`\n\nexport const Text = styled.p`\nmargin-bottom: ${p => p.theme.space[4]}px;\n`","import { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from \"../../../utils/fetchMovies\"\nimport { useParams } from \"react-router-dom\"\nimport { Container, Title, Text } from '../Reviews/Reviews.styled';\nimport { useLocation } from \"react-router-dom\"\n\nconst Reviews = () => {\n\n    const {movieId} = useParams();\n    // console.log(movieId);\n\n    const [reviews, setReviews] = useState([]);   \n    const location = useLocation();\n   \n    \n    useEffect(() => {\n          \n        fetchMovieReviews(movieId).then(response => { return response }).then((data) => {\n            setReviews(data);\n        }).catch(error => error)\n        }, [movieId])\n\n    if (reviews.length === 0) {\n            return <p> We don't have any reviews for this movie </p> }\n    \n    return (\n        <>\n            { reviews && <>\n                <Container>\n                <ul> \n                        {reviews.map((review, index) => (\n                            <li key={index} to={location.state?.from ?? \"/movies\"}> \n                            <Title> Author: {review.author} </Title>\n                            <Text> {review.content} </Text> </li>))}\n                </ul>\n                </Container>\n            </>}\n        </>          \n            \n    );\n \n}\n\nexport default Reviews;","import axios from 'axios';\n\n// Trending Movies\nasync function fetchTrendingMovies() {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=67021554df73ceabb07c793f51310845`\n  );\n  //   console.log(response.data);\n  return response.data;\n}\nexport { fetchTrendingMovies };\n\n// SearchQuery\nasync function fetchSearchQuery(searchQuery) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=67021554df73ceabb07c793f51310845&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  // console.log(response.data.results);\n  return response.data;\n}\nexport { fetchSearchQuery };\n\n// Movie Details\nasync function fetchMovieDetails(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=67021554df73ceabb07c793f51310845&language=en-US`\n  );\n  // console.log(response.data);\n  return response.data;\n}\nexport { fetchMovieDetails };\n\n// Cast\nasync function fetchMovieCast(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=67021554df73ceabb07c793f51310845&language=en-US`\n  );\n  // console.log(response.data);\n  return response.data;\n}\nexport { fetchMovieCast };\n\n// Reviews\nasync function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=67021554df73ceabb07c793f51310845&language=en-US&page=1`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n}\nexport { fetchMovieReviews };\n"],"names":["Container","styled","Title","p","theme","space","Text","movieId","useParams","useState","reviews","setReviews","location","useLocation","useEffect","fetchMovieReviews","then","response","data","catch","error","length","map","review","index","to","state","from","author","content","fetchTrendingMovies","axios","fetchSearchQuery","searchQuery","fetchMovieDetails","fetchMovieCast","results"],"sourceRoot":""}