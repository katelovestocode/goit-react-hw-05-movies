{"version":3,"file":"static/js/341.230c1dfe.chunk.js","mappings":"gQAIaA,EAAYC,EAAAA,GAAAA,IAAH,8GAET,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAKDC,EAAOJ,EAAAA,GAAAA,GAAH,oHAGJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAMDE,EAAWL,EAAAA,GAAAA,GAAH,8JAQRM,EAAQN,EAAAA,GAAAA,IAAH,gDAILO,EAAOP,EAAAA,GAAAA,GAAH,gD,SCUjB,EAjCa,WAET,IAAMQ,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0CE,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KASA,OANAC,EAAAA,EAAAA,YAAU,YAENC,EAAAA,EAAAA,IAAeN,GAASO,MAAK,SAAAC,GAAc,OAAOA,CAAU,IAAED,MAAK,SAACE,GAChEL,EAAiBK,EAAMC,KAAM,IAAEC,OAAM,SAAAC,GAAK,OAAIA,CAAJ,GACrD,GAAE,CAACZ,KAEQ,8BACHG,IAAiB,SAACd,EAAD,WAEd,SAACK,EAAD,UACCS,EAAcU,KAAI,SAACC,EAAMC,GAAP,eAEnB,UAACpB,EAAD,CAAsBqB,GAAE,oBAAElB,EAASmB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,UAAlD,UACQJ,EAAKK,cAAgB,SAACvB,EAAD,CAAOwB,IAAKC,EAAAA,EAAeP,EAAKK,aAAcG,IAAKR,EAAKS,KAAMC,MAAM,SAAa,SAAC5B,EAAD,CAAOwB,IAAI,uDAAuDE,IAAKR,EAAKS,KAAMC,MAAM,SACtM,UAAC3B,EAAD,gBAASiB,EAAKS,KAAd,QACA,wCAAgBT,EAAKW,UAArB,SAHeV,EAFI,SAc9B,C,sDCxCM,IAAMM,EACX,sD,uMCEaK,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBC,EAAAA,GAAAA,IAAA,0FADzB,cACQnB,EADR,yBAKSA,EAASoB,MALlB,kE,SAUeC,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,uFACyBH,EAAAA,GAAAA,IAAA,6IACiHG,IAF1I,cACQtB,EADR,yBAKSA,EAASoB,MALlB,kE,SAUeG,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiC/B,GAAjC,uFACyB2B,EAAAA,GAAAA,IAAA,6CACiB3B,EADjB,6DADzB,cACQQ,EADR,yBAKSA,EAASoB,MALlB,kE,SAUetB,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BN,GAA9B,uFACyB2B,EAAAA,GAAAA,IAAA,6CACiB3B,EADjB,qEADzB,cACQQ,EADR,yBAKSA,EAASoB,MALlB,kE,SAUeI,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiChC,GAAjC,uFACyB2B,EAAAA,GAAAA,IAAA,6CACiB3B,EADjB,4EADzB,cACQQ,EADR,yBAKSA,EAASoB,KAAKK,SALvB,kE","sources":["components/components/Cast/Cast.styled.jsx","components/components/Cast/Cast.jsx","utils/base_Image_Url.js","utils/fetchMovies.js"],"sourcesContent":["\nimport styled from 'styled-components';\n\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  padding: ${p => p.theme.space[2]}px;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: ${p => p.theme.space[0]}px;\n  list-style: none;\n  gap: 10px;\n`\n\n\nexport const ListItem = styled.li`\n flex-basis: calc((100% - 20px) / 3);\n display: flex;\n align-items: center;\n justify-content: center;\n flex-direction: column;\n\n`\nexport const Image = styled.img`\nmargin-bottom: 10px;\n\n`\nexport const Name = styled.h3`\nmargin-bottom: 10px;\n\n`","\nimport { useState, useEffect } from 'react';\nimport { fetchMovieCast} from \"../../../utils/fetchMovies\"\nimport { useParams } from \"react-router-dom\"\nimport { BASE_IMG_URL } from \"../../../utils/base_Image_Url\"\nimport { Container, List, ListItem, Image, Name } from './Cast.styled';\nimport { useLocation } from \"react-router-dom\"\n\n\nconst Cast = () => {\n\n    const location = useLocation();\n    const { movieId } = useParams();\n    const [castCharacter, setCastCharacter] = useState([]);        \n      \n\n    useEffect(() => {\n          \n        fetchMovieCast(movieId).then(response => { return response }).then((movie) => {\n            setCastCharacter(movie.cast)}).catch(error => error)\n}, [movieId])\n    \n    return (<>\n        {castCharacter && <Container>\n            \n            <List>\n            {castCharacter.map((item, index) => (\n            \n            <ListItem key={index} to={location.state?.from ?? \"/movies\"}>\n                   {item.profile_path ? (<Image src={BASE_IMG_URL + item.profile_path} alt={item.name} width=\"150\" />) : (<Image src=\"https://via.placeholder.com/150x225?text=Placeholder\" alt={item.name} width=\"150\" />)} \n            <Name>  {item.name} </Name>\n            <p> Character: {item.character} </p></ListItem>\n            \n            ))}\n                </List>\n               \n        </Container>}\n    \n    </>)\n\n}\n \nexport default Cast;","export const BASE_IMG_URL =\n  'https://www.themoviedb.org/t/p/w600_and_h900_bestv2/';\n","import axios from 'axios';\n\n// Trending Movies\nasync function fetchTrendingMovies() {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=67021554df73ceabb07c793f51310845`\n  );\n  //   console.log(response.data);\n  return response.data;\n}\nexport { fetchTrendingMovies };\n\n// SearchQuery\nasync function fetchSearchQuery(searchQuery) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=67021554df73ceabb07c793f51310845&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  // console.log(response.data.results);\n  return response.data;\n}\nexport { fetchSearchQuery };\n\n// Movie Details\nasync function fetchMovieDetails(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=67021554df73ceabb07c793f51310845&language=en-US`\n  );\n  // console.log(response.data);\n  return response.data;\n}\nexport { fetchMovieDetails };\n\n// Cast\nasync function fetchMovieCast(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=67021554df73ceabb07c793f51310845&language=en-US`\n  );\n  // console.log(response.data);\n  return response.data;\n}\nexport { fetchMovieCast };\n\n// Reviews\nasync function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=67021554df73ceabb07c793f51310845&language=en-US&page=1`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n}\nexport { fetchMovieReviews };\n"],"names":["Container","styled","p","theme","space","List","ListItem","Image","Name","location","useLocation","movieId","useParams","useState","castCharacter","setCastCharacter","useEffect","fetchMovieCast","then","response","movie","cast","catch","error","map","item","index","to","state","from","profile_path","src","BASE_IMG_URL","alt","name","width","character","fetchTrendingMovies","axios","data","fetchSearchQuery","searchQuery","fetchMovieDetails","fetchMovieReviews","results"],"sourceRoot":""}