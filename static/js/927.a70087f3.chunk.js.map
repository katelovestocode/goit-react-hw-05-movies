{"version":3,"file":"static/js/927.a70087f3.chunk.js","mappings":"mPAEaA,EAAYC,EAAAA,GAAAA,IAAH,sCAGTC,EAAQD,EAAAA,GAAAA,GAAH,+CACD,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGLC,EAAOL,EAAAA,GAAAA,EAAH,+CACA,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,SC+BlB,EApCgB,WAEZ,IAAOE,GAAWC,EAAAA,EAAAA,MAAXD,QAGP,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OAPAC,EAAAA,EAAAA,YAAU,YAENC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,SAAAC,GAAc,OAAOA,CAAU,IAAED,MAAK,SAACE,GACnEL,EAAWK,EACd,IAAEC,OAAM,SAAAC,GAAK,OAAIA,CAAJ,GACb,GAAE,CAACX,IAEe,IAAnBG,EAAQS,QACG,uEAGX,8BACMT,IAAW,+BACT,SAACV,EAAD,WACA,wBACSU,EAAQU,KAAI,SAACC,EAAQC,GAAT,OACT,2BACA,UAACpB,EAAD,uBAAiBmB,EAAOE,OAAxB,QACA,UAACjB,EAAD,eAAQe,EAAOG,QAAf,OAFA,MAASF,EADA,WAWpC,C,uMCpCcG,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBC,EAAAA,GAAAA,IAAA,0FADzB,cACQX,EADR,yBAKSA,EAASC,MALlB,kE,SAUeW,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,uFACyBF,EAAAA,GAAAA,IAAA,6IACiHE,IAF1I,cACQb,EADR,yBAKSA,EAASC,MALlB,kE,SAUea,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCtB,GAAjC,uFACyBmB,EAAAA,GAAAA,IAAA,6CACiBnB,EADjB,6DADzB,cACQQ,EADR,yBAKSA,EAASC,MALlB,kE,SAUec,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BvB,GAA9B,uFACyBmB,EAAAA,GAAAA,IAAA,6CACiBnB,EADjB,qEADzB,cACQQ,EADR,yBAKSA,EAASC,MALlB,kE,SAUeH,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCN,GAAjC,uFACyBmB,EAAAA,GAAAA,IAAA,6CACiBnB,EADjB,4EADzB,cACQQ,EADR,yBAKSA,EAASC,KAAKe,SALvB,kE","sources":["components/components/Reviews/Reviews.styled.jsx","components/components/Reviews/Reviews.jsx","utils/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\ndisplay: flex;`\n\nexport const Title = styled.h4`\nmargin-bottom: ${p => p.theme.space[4]}px;\n`\n\nexport const Text = styled.p`\nmargin-bottom: ${p => p.theme.space[4]}px;\n`","import { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from \"../../../utils/fetchMovies\"\nimport { useParams } from \"react-router-dom\"\nimport { Container, Title, Text } from '../Reviews/Reviews.styled';\n\nconst Reviews = () => {\n\n    const {movieId} = useParams();\n    // console.log(movieId);\n\n    const [reviews, setReviews] = useState([]);   \n   \n    \n    useEffect(() => {\n          \n        fetchMovieReviews(movieId).then(response => { return response }).then((data) => {\n            setReviews(data);\n        }).catch(error => error)\n        }, [movieId])\n\n    if (reviews.length === 0) {\n            return <p> We don't have any reviews for this movie </p> }\n    \n    return (\n        <>\n            { reviews && <>\n                <Container>\n                <ul> \n                        {reviews.map((review, index) => (\n                            <li key={index}> \n                            <Title> Author: {review.author} </Title>\n                            <Text> {review.content} </Text> </li>))}\n                </ul>\n                </Container>\n            </>}\n        </>          \n            \n    );\n \n}\n\nexport default Reviews;","import axios from 'axios';\n\n// Trending Movies\nasync function fetchTrendingMovies() {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=67021554df73ceabb07c793f51310845`\n  );\n  //   console.log(response.data);\n  return response.data;\n}\nexport { fetchTrendingMovies };\n\n// SearchQuery\nasync function fetchSearchQuery(searchQuery) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=67021554df73ceabb07c793f51310845&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  // console.log(response.data.results);\n  return response.data;\n}\nexport { fetchSearchQuery };\n\n// Movie Details\nasync function fetchMovieDetails(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=67021554df73ceabb07c793f51310845&language=en-US`\n  );\n  // console.log(response.data);\n  return response.data;\n}\nexport { fetchMovieDetails };\n\n// Cast\nasync function fetchMovieCast(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=67021554df73ceabb07c793f51310845&language=en-US`\n  );\n  // console.log(response.data);\n  return response.data;\n}\nexport { fetchMovieCast };\n\n// Reviews\nasync function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=67021554df73ceabb07c793f51310845&language=en-US&page=1`\n  );\n  // console.log(response.data.results);\n  return response.data.results;\n}\nexport { fetchMovieReviews };\n"],"names":["Container","styled","Title","p","theme","space","Text","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","then","response","data","catch","error","length","map","review","index","author","content","fetchTrendingMovies","axios","fetchSearchQuery","searchQuery","fetchMovieDetails","fetchMovieCast","results"],"sourceRoot":""}